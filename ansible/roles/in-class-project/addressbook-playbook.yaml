---
- name: install Docker
  hosts: control
  become: true
  vars:
       projectDir: "/tmp/addressbook"
       generatedImageName: "addressbook:fromansible"
       warPath: "addressbook_main/target/addressbook.war"
  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker
    - name: Checkout Git repo
      git:
        repo: https://github.com/amitkumar2283/addressbook
        dest: "{{ projectDir }}"
    - name: Update apt and install Maven
      apt: update_cache=yes name=maven state=latest
    - name: Update apt and install Java
      apt: update_cache=yes name=openjdk-8-jdk state=latest
    - name: Build WAR file
      command: chdir="{{ projectDir }}" mvn package
    - name: Copy Generated WAR file
      command: cp "{{ projectDir }}/{{ warPath }}" "{{ projectDir }}"
    - name: Build Docker Image
      command: chdir="{{ projectDir }}" docker build . -t "{{ generatedImageName }}"
    - name: Run Docker Container
      command: chdir="{{ projectDir }}" docker run -itd -p 9000:8080 "{{ generatedImageName }}"
