# Create Storage Class

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: manual
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
# Create 2 PVs

kind: PersistentVolume
apiVersion: v1
metadata:
 name: nginx-pv-1
 labels:
  type: local
  app: nginx
spec:
 storageClassName: manual
 capacity:
  storage: 1Gi
 accessModes:
 - ReadWriteOnce
 hostPath:
  path: "/home/edureka/data1"
---
kind: PersistentVolume
apiVersion: v1
metadata:
 name: nginx-pv-2
 labels:
  type: local
  app: nginx
spec:
 storageClassName: manual
 capacity:
  storage: 1Gi
 accessModes:
 - ReadWriteOnce
 hostPath:
  path: "/home/edureka/data2"
  
---
# Create StatefulSet

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: k8s.gcr.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "manual"
      resources:
        requests:
          storage: 1Gi
---
# Create Service to expose the statefulSet

apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None
  selector:
    app: nginx
